Remarks:
1)reward function x_distance only takes inverse distance as minmization function and optimizes such that it swims with a weird motion, i.e. high frequency
see example: scatter_sim(0.2, "Δx")
			get_sim(0.2, "Δx").viewer(20, 5)

2) reward function energy_efficient takes energy/distance as a minimization function and optimizes such that it lies dead. see example: scatter_sim(1.8, "energy_efficient")
				get_sim(1.8, "energy_efficient").viewer(21, 3)
				
3) reward function 
see example: get_sim(2., "energy_efficient_velocity").viewer(27, 6)
			get_sim(0.8, "energy_efficient_velocity").viewer(27, 5)
			get_sim(0.4, "energy_efficient_velocity").viewer(25, 0)	# still not good
